{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst valueDelay = document.querySelector('[type=\"number\"]');\nconst createNotification = document.querySelector('[type=\"submit\"]');\nconst fulfilled = document.querySelector('[value=\"fulfilled\"]');\nconst rejected = document.querySelector('[value=\"rejected\"]');\nconst formState = document.querySelector('fieldset');\n\nconst saveToLocalStorage = () => {\n  const settings = {\n    delay: valueDelay.value,\n    fulfilledChecked: fulfilled.checked,\n    rejectedChecked: rejected.checked,\n  };\n  localStorage.setItem('formSettings', JSON.stringify(settings));\n};\n\nconst loadFromLocalStorage = () => {\n  const settings = JSON.parse(localStorage.getItem('formSettings'));\n  if (settings) {\n    valueDelay.value = settings.delay || '';\n    fulfilled.checked = settings.fulfilledChecked;\n    rejected.checked = settings.rejectedChecked;\n  }\n};\n\nconst createPromise = waitingTime => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (fulfilled.checked) {\n        resolve(`✅ Fulfilled promise in ${waitingTime}ms`);\n      } else {\n        reject(`❌ Rejected promise in ${waitingTime}ms`);\n      }\n    }, waitingTime);\n  });\n};\n\nconst showNotification = (message, type = 'info') => {\n   iziToast.show({\n     title: 'info',\n     message: 'Time is up!',\n     color: '#4CAF50',\n     position: 'topRight',\n     messageColor: '#fff',\n     titleColor: '#fff',\n   });\n};\n\nconst pressClick = ev => {\n  ev.preventDefault();\n\n  const delayValue = valueDelay.value;\n  if (!delayValue || delayValue < 0) {\n    showNotification('Please enter a valid delay time.', 'error');\n    return;\n  }\n\n  saveToLocalStorage();\n\n  createPromise(delayValue).then(\n    value => showNotification(value),\n    error => showNotification(error, 'error')\n  );\n};\n\n// Load settings from local storage on page load\ndocument.addEventListener('DOMContentLoaded', loadFromLocalStorage);\n\ncreateNotification.addEventListener('click', pressClick);\n"],"names":["valueDelay","createNotification","fulfilled","rejected","saveToLocalStorage","settings","loadFromLocalStorage","createPromise","waitingTime","resolve","reject","showNotification","message","type","iziToast","pressClick","ev","delayValue","value","error"],"mappings":"mIAGA,MAAMA,EAAa,SAAS,cAAc,iBAAiB,EACrDC,EAAqB,SAAS,cAAc,iBAAiB,EAC7DC,EAAY,SAAS,cAAc,qBAAqB,EACxDC,EAAW,SAAS,cAAc,oBAAoB,EAC1C,SAAS,cAAc,UAAU,EAEnD,MAAMC,EAAqB,IAAM,CAC/B,MAAMC,EAAW,CACf,MAAOL,EAAW,MAClB,iBAAkBE,EAAU,QAC5B,gBAAiBC,EAAS,OAC9B,EACE,aAAa,QAAQ,eAAgB,KAAK,UAAUE,CAAQ,CAAC,CAC/D,EAEMC,EAAuB,IAAM,CACjC,MAAMD,EAAW,KAAK,MAAM,aAAa,QAAQ,cAAc,CAAC,EAC5DA,IACFL,EAAW,MAAQK,EAAS,OAAS,GACrCH,EAAU,QAAUG,EAAS,iBAC7BF,EAAS,QAAUE,EAAS,gBAEhC,EAEME,EAAgBC,GACb,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXR,EAAU,QACZO,EAAQ,0BAA0BD,CAAW,IAAI,EAEjDE,EAAO,yBAAyBF,CAAW,IAAI,CAElD,EAAEA,CAAW,CAClB,CAAG,EAGGG,EAAmB,CAACC,EAASC,EAAO,SAAW,CAClDC,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,cACT,MAAO,UACP,SAAU,WACV,aAAc,OACd,WAAY,MACjB,CAAI,CACJ,EAEMC,EAAaC,GAAM,CACvBA,EAAG,eAAc,EAEjB,MAAMC,EAAajB,EAAW,MAC9B,GAAI,CAACiB,GAAcA,EAAa,EAAG,CACjCN,EAAiB,mCAAoC,OAAO,EAC5D,MACD,CAEDP,IAEAG,EAAcU,CAAU,EAAE,KACxBC,GAASP,EAAsB,EAC/BQ,GAASR,EAAiBQ,EAAO,OAAO,CAC5C,CACA,EAGA,SAAS,iBAAiB,mBAAoBb,CAAoB,EAElEL,EAAmB,iBAAiB,QAASc,CAAU"}