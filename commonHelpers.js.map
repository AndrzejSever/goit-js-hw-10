{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst variables = {\n  inputValue: document.querySelector('#datetime-picker'),\n  buttonStart: document.querySelector('[type=\"button\"]'),\n  userSelectedDate: null,\n\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    function pad(value) {\n      return String(value).padStart(2, '0');\n    }\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = pad(Math.floor((ms % day) / hour));\n    // Remaining minutes\n    const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n    // Remaining seconds\n    const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n    return { days, hours, minutes, seconds };\n  },\n};\n\nflatpickr('input#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\nconst dataStart = Date.now()\n        console.log(selectedDates[0]);\n      if (selectedDates[0]>dataStart) {\n        variables.userSelectedDate = selectedDates[0];\n      }\n      else {\n        //   window.alert('Please choose a date in the future');\n          variables.buttonStart.removeEventListener('click', listenerCallback); \n         iziToast.show({\n           message: 'Please choose a date in the future',\n         });\n          \n    }\n  },\n});\n\nfunction listenerCallback() {\n     \n       setInterval(() => {\n         const initialTime = new Date();\n         const deltaTime = variables.userSelectedDate - initialTime;\n         console.log(deltaTime);\n         const time = variables.convertMs(deltaTime);\n\n         console.log(time);\n       }, 1000);\n    \n}\n\nvariables.buttonStart.addEventListener('click', listenerCallback);\n\n\n"],"names":["variables","ms","pad","value","days","hours","minutes","seconds","flatpickr","selectedDates","dataStart","listenerCallback","iziToast","initialTime","deltaTime","time"],"mappings":"+IAQA,MAAMA,EAAY,CAChB,WAAY,SAAS,cAAc,kBAAkB,EACrD,YAAa,SAAS,cAAc,iBAAiB,EACrD,iBAAkB,KAElB,UAAUC,EAAI,CAMZ,SAASC,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAGD,MAAMC,EAAO,KAAK,MAAMH,EAAK,KAAG,EAE1BI,EAAQH,EAAI,KAAK,MAAOD,EAAK,MAAO,IAAI,CAAC,EAEzCK,EAAUJ,EAAI,KAAK,MAAQD,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEtDM,EAAUL,EAAI,KAAK,MAASD,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAEvE,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,EAEAC,EAAU,wBAAyB,CACjC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CAC3B,MAAMC,EAAY,KAAK,IAAK,EACpB,QAAQ,IAAID,EAAc,CAAC,CAAC,EAC1BA,EAAc,CAAC,EAAEC,EACnBV,EAAU,iBAAmBS,EAAc,CAAC,GAI1CT,EAAU,YAAY,oBAAoB,QAASW,CAAgB,EACpEC,EAAS,KAAK,CACZ,QAAS,oCACpB,CAAU,EAGP,CACH,CAAC,EAED,SAASD,GAAmB,CAErB,YAAY,IAAM,CAChB,MAAME,EAAc,IAAI,KAClBC,EAAYd,EAAU,iBAAmBa,EAC/C,QAAQ,IAAIC,CAAS,EACrB,MAAMC,EAAOf,EAAU,UAAUc,CAAS,EAE1C,QAAQ,IAAIC,CAAI,CACjB,EAAE,GAAI,CAEd,CAEAf,EAAU,YAAY,iBAAiB,QAASW,CAAgB"}